{"ast":null,"code":"var _jsxFileName = \"/Users/yuyoungmin/Desktop/main_03_sockJs/src/component/test.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport SockJS from \"sockjs-client\";\n// import StompJS from \"stompjs\";\nimport * as StompJs from \"@stomp/stompjs\";\nimport axios from \"axios\";\nimport \"./test.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Test = () => {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [currentRoomId, setCurrentRoomId] = useState(0);\n  const [createRoomId, setCreateRoomId] = useState(\"\");\n  const [changeRoomId, setChangeRoomId] = useState(\"\");\n  // const [profileId, setProfileId] = useState(1);\n\n  const initialChatSetting = async () => {\n    await axios.get(`/chats/message/${currentRoomId}`).then(_ref => {\n      let {\n        data: {\n          chatResponses\n        }\n      } = _ref;\n      return setMessages(chatResponses);\n    });\n  };\n  const setWebSocket = async () => {\n    try {\n      const sockjs = new SockJS(`/stomp/content`);\n      const ws = StompJs.Client(sockjs);\n      await ws.connect(\"\", () => {\n        ws.subscribe(`sub/room/${currentRoomId}`, async msg => {\n          console.log(msg);\n          // setMessages([...messages, JSON.parse(msg.body)]);\n          console.log(\"subscribe 완료\");\n          //구독한 location에서 메시지를 수신했을 때 처리해주고자 하는 동작\n        });\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const inputHandler = e => {\n    setText(e.target.value);\n  };\n  useEffect(() => {\n    if (currentRoomId === 0) return;\n    initialChatSetting();\n    setWebSocket();\n  }, [currentRoomId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat\",\n        children: messages.map(el => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: el.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: inputHandler,\n          value: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"setRoom_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setChangeRoomId(e.target.value),\n        value: changeRoomId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentRoomId(Number(changeRoomId)),\n        children: \"setRoom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"currentRoomId: \", currentRoomId]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"createRoom_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          axios.post(\"/room\", {\n            receiverId: 1,\n            senderId: 2\n          }).then(_ref2 => {\n            let {\n              data\n            } = _ref2;\n            return setCreateRoomId(data.roomId);\n          });\n        },\n        children: \"createRoom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"createRoomId: \", createRoomId]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(Test, \"EeGNIr5Pa/pY5voaBCdgyJ0myrE=\");\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["useState","useEffect","SockJS","StompJs","axios","Test","text","setText","messages","setMessages","currentRoomId","setCurrentRoomId","createRoomId","setCreateRoomId","changeRoomId","setChangeRoomId","initialChatSetting","get","then","data","chatResponses","setWebSocket","sockjs","ws","Client","connect","subscribe","msg","console","log","error","inputHandler","e","target","value","map","el","content","Number","post","receiverId","senderId","roomId"],"sources":["/Users/yuyoungmin/Desktop/main_03_sockJs/src/component/test.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport SockJS from \"sockjs-client\";\n// import StompJS from \"stompjs\";\nimport * as StompJs from \"@stomp/stompjs\";\nimport axios from \"axios\";\nimport \"./test.css\";\n\nconst Test = () => {\n  const [text, setText] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [currentRoomId, setCurrentRoomId] = useState(0);\n  const [createRoomId, setCreateRoomId] = useState(\"\");\n  const [changeRoomId, setChangeRoomId] = useState(\"\");\n  // const [profileId, setProfileId] = useState(1);\n\n  const initialChatSetting = async () => {\n    await axios\n      .get(`/chats/message/${currentRoomId}`)\n      .then(({ data: { chatResponses } }) => setMessages(chatResponses));\n  };\n\n  const setWebSocket = async () => {\n    try {\n      const sockjs = new SockJS(`/stomp/content`);\n      const ws = StompJs.Client(sockjs);\n      await ws.connect(\"\", () => {\n        ws.subscribe(`sub/room/${currentRoomId}`, async (msg) => {\n          console.log(msg);\n          // setMessages([...messages, JSON.parse(msg.body)]);\n          console.log(\"subscribe 완료\");\n          //구독한 location에서 메시지를 수신했을 때 처리해주고자 하는 동작\n        });\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const inputHandler = (e) => {\n    setText(e.target.value);\n  };\n\n  useEffect(() => {\n    if (currentRoomId === 0) return;\n    initialChatSetting();\n    setWebSocket();\n  }, [currentRoomId]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"chat_container\">\n        <div className=\"chat\">\n          {messages.map((el) => {\n            return <div>{el.content}</div>;\n          })}\n        </div>\n        <div className=\"input_container\">\n          <input onChange={inputHandler} value={text} />\n          <button>send</button>\n        </div>\n      </div>\n      <div className=\"setRoom_container\">\n        <input\n          onChange={(e) => setChangeRoomId(e.target.value)}\n          value={changeRoomId}\n        />\n        <button onClick={() => setCurrentRoomId(Number(changeRoomId))}>\n          setRoom\n        </button>\n        <>currentRoomId: {currentRoomId}</>\n      </div>\n      <div className=\"createRoom_container\">\n        <button\n          onClick={() => {\n            axios\n              .post(\"/room\", {\n                receiverId: 1,\n                senderId: 2,\n              })\n              .then(({ data }) => setCreateRoomId(data.roomId));\n          }}\n        >\n          createRoom\n        </button>\n        <>createRoomId: {createRoomId}</>\n      </div>\n      {/* <button onClick={setWebSocket}>웹소켓 연결</button> */}\n    </div>\n  );\n};\n\nexport default Test;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}