{"ast":null,"code":"var _jsxFileName = \"/Users/yuyoungmin/Desktop/main_03_sockJs/src/component/test.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport SockJS from \"sockjs-client\";\n// import StompJS from \"stompjs\";\nimport * as StompJs from \"@stomp/stompjs\";\nimport axios from \"axios\";\nimport \"./test.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Test = () => {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [currentRoomId, setCurrentRoomId] = useState(0);\n  const [changeRoomId, setChangeRoomId] = useState(\"\");\n  const URL = \"\";\n  const initialChatSetting = async () => {\n    await axios.get(URL).then(res => setMessages(res.data));\n  };\n  const setWebSocket = async () => {\n    try {\n      const sockjs = new SockJS(``);\n      const ws = StompJS.over(sockjs);\n      await ws.connect(\"TOKEN\", () => {\n        ws.subscribe(``, async message => {\n          const msg = JSON.parse(message.body);\n        });\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const inputHandler = e => {\n    setText(e.target.value);\n  };\n\n  // useEffect(() => {\n  //   if (curruntRoomId === 0) return;\n  //   initialChatSetting();\n  //   setWebSocket();\n  // }, [curruntRoomId]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat\",\n        children: messages.map(el => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: el\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: inputHandler,\n          value: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"setRoom_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setChangeRoomId(e.target.value),\n        value: changeRoomId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentRoomId(changeRoomId),\n        children: \"setRoom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Test, \"gEaarcP7FzNM10TrMKtitZeYFmw=\");\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["useState","useEffect","SockJS","StompJs","axios","Test","text","setText","messages","setMessages","currentRoomId","setCurrentRoomId","changeRoomId","setChangeRoomId","URL","initialChatSetting","get","then","res","data","setWebSocket","sockjs","ws","StompJS","over","connect","subscribe","message","msg","JSON","parse","body","error","console","log","inputHandler","e","target","value","map","el"],"sources":["/Users/yuyoungmin/Desktop/main_03_sockJs/src/component/test.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport SockJS from \"sockjs-client\";\n// import StompJS from \"stompjs\";\nimport * as StompJs from \"@stomp/stompjs\";\nimport axios from \"axios\";\nimport \"./test.css\";\n\nconst Test = () => {\n  const [text, setText] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [currentRoomId, setCurrentRoomId] = useState(0);\n  const [changeRoomId, setChangeRoomId] = useState(\"\");\n  const URL = \"\";\n\n  const initialChatSetting = async () => {\n    await axios.get(URL).then((res) => setMessages(res.data));\n  };\n\n  const setWebSocket = async () => {\n    try {\n      const sockjs = new SockJS(``);\n      const ws = StompJS.over(sockjs);\n      await ws.connect(\"TOKEN\", () => {\n        ws.subscribe(``, async (message) => {\n          const msg = JSON.parse(message.body);\n        });\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const inputHandler = (e) => {\n    setText(e.target.value);\n  };\n\n  // useEffect(() => {\n  //   if (curruntRoomId === 0) return;\n  //   initialChatSetting();\n  //   setWebSocket();\n  // }, [curruntRoomId]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"chat_container\">\n        <div className=\"chat\">\n          {messages.map((el) => {\n            return <div>{el}</div>;\n          })}\n        </div>\n        <div className=\"input_container\">\n          <input onChange={inputHandler} value={text} />\n          <button>send</button>\n        </div>\n      </div>\n      <div className=\"setRoom_container\">\n        <input\n          onChange={(e) => setChangeRoomId(e.target.value)}\n          value={changeRoomId}\n        />\n        <button onClick={() => setCurrentRoomId(changeRoomId)}>setRoom</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Test;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,MAAM,MAAM,eAAe;AAClC;AACA,OAAO,KAAKC,OAAO,MAAM,gBAAgB;AACzC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;AAAC;AAEpB,MAAMC,IAAI,GAAG,MAAM;EAAA;EACjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACrD,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAMc,GAAG,GAAG,EAAE;EAEd,MAAMC,kBAAkB,GAAG,YAAY;IACrC,MAAMX,KAAK,CAACY,GAAG,CAACF,GAAG,CAAC,CAACG,IAAI,CAAEC,GAAG,IAAKT,WAAW,CAACS,GAAG,CAACC,IAAI,CAAC,CAAC;EAC3D,CAAC;EAED,MAAMC,YAAY,GAAG,YAAY;IAC/B,IAAI;MACF,MAAMC,MAAM,GAAG,IAAInB,MAAM,CAAE,EAAC,CAAC;MAC7B,MAAMoB,EAAE,GAAGC,OAAO,CAACC,IAAI,CAACH,MAAM,CAAC;MAC/B,MAAMC,EAAE,CAACG,OAAO,CAAC,OAAO,EAAE,MAAM;QAC9BH,EAAE,CAACI,SAAS,CAAE,EAAC,EAAE,MAAOC,OAAO,IAAK;UAClC,MAAMC,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,CAACI,IAAI,CAAC;QACtC,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EACF,CAAC;EAED,MAAMG,YAAY,GAAIC,CAAC,IAAK;IAC1B7B,OAAO,CAAC6B,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACzB,CAAC;;EAED;EACA;EACA;EACA;EACA;;EAEA,oBACE;IAAK,SAAS,EAAC,WAAW;IAAA,wBACxB;MAAK,SAAS,EAAC,gBAAgB;MAAA,wBAC7B;QAAK,SAAS,EAAC,MAAM;QAAA,UAClB9B,QAAQ,CAAC+B,GAAG,CAAEC,EAAE,IAAK;UACpB,oBAAO;YAAA,UAAMA;UAAE;YAAA;YAAA;YAAA;UAAA,QAAO;QACxB,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QACE,eACN;QAAK,SAAS,EAAC,iBAAiB;QAAA,wBAC9B;UAAO,QAAQ,EAAEL,YAAa;UAAC,KAAK,EAAE7B;QAAK;UAAA;UAAA;UAAA;QAAA,QAAG,eAC9C;UAAA,UAAQ;QAAI;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA,QACjB;IAAA;MAAA;MAAA;MAAA;IAAA,QACF,eACN;MAAK,SAAS,EAAC,mBAAmB;MAAA,wBAChC;QACE,QAAQ,EAAG8B,CAAC,IAAKvB,eAAe,CAACuB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;QACjD,KAAK,EAAE1B;MAAa;QAAA;QAAA;QAAA;MAAA,QACpB,eACF;QAAQ,OAAO,EAAE,MAAMD,gBAAgB,CAACC,YAAY,CAAE;QAAA,UAAC;MAAO;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACnE;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,GAzDIP,IAAI;AAAA,KAAJA,IAAI;AA2DV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}